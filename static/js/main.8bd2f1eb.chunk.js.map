{"version":3,"sources":["consts/consts.jsx","components/header/homepageHeading.jsx","components/containers/desktopContainer.jsx","components/containers/mobileContainer.jsx","components/explanations/name.jsx","components/explanations/overview.jsx","components/buttons/viewDetailButton.jsx","components/home.jsx","serviceWorker.js","index.js"],"names":["Consts","DISCORD_APP_NAME","DISCORD_APP_OVERVIEW","DISCORD_APP_MOTION_CAPUTURE","DISCORD_APP_OPERATION_SETTING_CAPTURE","BUTTON_READ_MORE","HomepageHeading","mobile","this","props","Container","text","Header","as","content","inverted","style","fontSize","fontWeight","marginTop","marginBottom","Component","DesktopContainer","state","hideFixedMenu","setState","fixed","showFixedMenu","getWidth","window","Responsive","onlyTablet","minWidth","innerWidth","children","Visibility","once","onBottomPassed","onBottomPassedReverse","Segment","textAlign","minHeight","padding","vertical","Menu","pointing","secondary","size","Item","active","MobileContainer","handleSidebarHide","sidebarOpened","handleToggle","Sidebar","Pushable","maxWidth","onlyMobile","animation","onHide","visible","Pusher","dimmed","onClick","Icon","name","position","Form","Field","marginLeft","placeholder","Button","Name","title","Overview","overview","ViewDetailButton","viewDetail","detail","console","log","isViewDetails","view","ResponsiveContainer","HomepageLayout","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","styleLink","createElement","rel","href","head","appendChild","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8bd2f1eb.chunk.js","sourcesContent":["const Consts = {\n  DISCORD_APP_NAME: 'DiscordのVC入退室通知ツール',\n  DISCORD_APP_OVERVIEW: 'このBOTを導入したDiscordサーバのボイスチャットへIN or OUTした際のユーザ名を指定のチャンネルへ投稿します。',\n  DISCORD_APP_MOTION_CAPUTURE: 'https://camo.githubusercontent.com/4677d97b0e5fa3dbd57f4d6547890ba11090a6ac/68747470733a2f2f7261772e6769746875622e636f6d2f77696b692f6d697a756b69636869303231302f4d616e6167652d456e74657265642d616e642d4c6566742d6f6e2d446973636f72642f6578616d706c655f6769662e676966',\n  DISCORD_APP_OPERATION_SETTING_CAPTURE: 'https://user-images.githubusercontent.com/37664176/83553813-c0d99480-a546-11ea-92d6-30500db4eddd.png',\n\n  BUTTON_READ_MORE: 'Read more...',\n}\n\nexport default Consts;","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport {\n  Container,\n  Header,\n} from 'semantic-ui-react'\n\nclass HomepageHeading extends Component {\n  \n  render (mobile = this.props.mobile) {\n    return <Container text>\n    <Header\n      as='h1'\n      content='リポジトリ概要紹介'\n      inverted\n      style={{\n        fontSize: mobile ? '2em' : '4em',\n        fontWeight: 'normal',\n        marginTop: mobile ? '0em' : '1em',\n        marginBottom: '1em',\n      }}\n    />\n  </Container>\n  }\n\n}\n\nHomepageHeading.propTypes = {\n  mobile: PropTypes.bool,\n}\n\nexport default HomepageHeading;\n","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport {\n  Container,\n  Menu,\n  Responsive,\n  Segment,\n  Visibility,\n} from 'semantic-ui-react'\nimport HomepageHeading from '../header/homepageHeading'\n\nclass DesktopContainer extends Component {\n\n  state = {}\n\n  hideFixedMenu = () => this.setState({ fixed: false })\n  showFixedMenu = () => this.setState({ fixed: true })\n  getWidth = () => {\n    const isSSR = typeof window === 'undefined'\n\n    return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n  }\n\n  render() {\n    const { children } = this.props\n    const { fixed } = this.state\n\n    return (\n      <Responsive getWidth={this.getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n        >\n          <Segment\n            inverted\n            textAlign='center'\n            style={{ minHeight: 350, padding: '1em 0em' }}\n            vertical\n          >\n            <Menu\n              fixed={fixed ? 'top' : null}\n              inverted={!fixed}\n              pointing={!fixed}\n              secondary={!fixed}\n              size='large'\n            >\n              <Container>\n                <Menu.Item as='a' active>\n                  Home\n                </Menu.Item>\n              </Container>\n            </Menu>\n            <HomepageHeading />\n          </Segment>\n        </Visibility>\n        {children}\n      </Responsive>\n    )\n  }\n}\n\nDesktopContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default DesktopContainer;\n","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport {\n  Button,\n  Container,\n  Form,\n  Icon,\n  Menu,\n  Responsive,\n  Segment,\n  Sidebar,\n} from 'semantic-ui-react'\nimport HomepageHeading from '../header/homepageHeading'\n\nclass MobileContainer extends Component {\n\n  state = {}\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false })\n\n  handleToggle = () => this.setState({ sidebarOpened: true })\n\n  getWidth = () => {\n    const isSSR = typeof window === 'undefined'\n\n    return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n  }\n\n  render() {\n    const { children } = this.props\n    const { sidebarOpened } = this.state\n\n    return (\n      <Responsive\n        as={Sidebar.Pushable}\n        getWidth={this.getWidth}\n        maxWidth={Responsive.onlyMobile.maxWidth}\n      >\n        <Sidebar\n          as={Menu}\n          animation='push'\n          inverted\n          onHide={this.handleSidebarHide}\n          vertical\n          visible={sidebarOpened}\n        >\n          <Menu.Item as='a' active>\n            Home\n          </Menu.Item>\n          <Menu.Item as='a'>Repository list</Menu.Item>\n        </Sidebar>\n\n        <Sidebar.Pusher dimmed={sidebarOpened}>\n          <Segment\n            inverted\n            textAlign='center'\n            style={{ minHeight: 175, padding: '1em 0em' }}\n            vertical\n          >\n            <Container>\n              <Menu inverted pointing secondary size='large'>\n                <Menu.Item onClick={this.handleToggle}>\n                  <Icon name='sidebar' />\n                </Menu.Item>\n                <Menu.Item position='right'>\n                  <Form>\n                    <Form.Field inverted style={{ marginLeft: '0.5em' }}>\n                      <input placeholder='リポジトリ検索'></input>\n                    </Form.Field>\n                  </Form>\n                  <Button as='a' inverted style={{ marginLeft: '0.5em' }}>\n                    Search\n                  </Button>\n                </Menu.Item>\n              </Menu>\n            </Container>\n            <HomepageHeading mobile />\n          </Segment>\n\n          {children}\n        </Sidebar.Pusher>\n      </Responsive>\n    )\n  }\n}\n\nMobileContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default MobileContainer;\n","import React, { Component } from 'react'\nimport {\n  Header,\n} from 'semantic-ui-react'\n\nclass Name extends Component {\n  state = {}\n\n  render() {\n    const { title } = this.props\n\n    return (\n      <Header as='h3' style={{ fontSize: '2em' }}>\n        {title}\n      </Header>\n    )\n  }\n}\n\nexport default Name;\n","import React, { Component } from 'react'\n\nclass Overview extends Component {\n  state = {}\n\n  render() {\n    const { overview } = this.props\n\n    return(\n      <p style={{ fontSize: '1.33em' }}>\n        {overview}\n      </p>\n    );\n  }\n}\n\nexport default Overview;\n","import Consts from '../../consts/consts'\nimport React, { Component } from 'react'\nimport {\n  Responsive,\n  Button\n} from 'semantic-ui-react'\n\nclass ViewDetailButton extends Component {\n\n  constructor(props){\n    super();\n    this.state = {isViewDetails: false};\n  }\n  state = {}\n\n  hideFixedMenu = () => this.setState({ fixed: false })\n  showFixedMenu = () => this.setState({ fixed: true })\n  getWidth = () => {\n    const isSSR = typeof window === 'undefined'\n\n    return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n  }\n  \n  render() {\n    const {isViewDetails} = this.state.isViewDetails;\n    let view;\n\n    if(isViewDetails){\n\n    } else {\n      view = Consts.BUTTON_READ_MORE;\n    }\n\n    return(\n      <Button onClick={() => this.viewDetail()}>\n        {view}\n      </Button>\n    );\n  }\n  \n  viewDetail = (detail) => {\n    console.log('ok')\n  }\n}\n\nexport default ViewDetailButton;\n","import Consts from '../consts/consts'\nimport DesktopContainer from './containers/desktopContainer'\nimport MobileContainer from './containers/mobileContainer'\nimport Name from './explanations/name'\nimport Overview from './explanations/overview'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport ViewDetailButton from './buttons/viewDetailButton'\nimport {\n  Container,\n  Segment,\n} from 'semantic-ui-react'\n\nconst ResponsiveContainer = ({ children }) => (\n  <div>\n    <DesktopContainer>{children}</DesktopContainer>\n    <MobileContainer>{children}</MobileContainer>\n  </div>\n)\n\nResponsiveContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nconst HomepageLayout = () => (\n  <ResponsiveContainer>\n    <Segment style={{ padding: '8em 0em' }} vertical>\n      <Container text>\n        <Name title={Consts.DISCORD_APP_NAME}></Name>\n        <Overview overview={Consts.DISCORD_APP_OVERVIEW}></Overview>\n        <ViewDetailButton></ViewDetailButton>\n      </Container>\n    </Segment>\n  </ResponsiveContainer>\n)\n\nexport default HomepageLayout\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport HomePage from './components/home';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-react'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HomePage></HomePage>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nconst styleLink = document.createElement(\"link\");\nstyleLink.rel = \"stylesheet\";\nstyleLink.href = \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\ndocument.head.appendChild(styleLink);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}